# docker-compose.prod.yml
version: '3.8'

services:
  act:
    # Pull the image from Docker Hub instead of building it.
    # You can pin to a specific version like 'editoredit/act:1.0.0' for stability.
    image: editoredit/act:1.0.1

    container_name: act_production
    restart: unless-stopped

    ports:
      - "${PORT:-3014}:3014"

    # Environment variables are loaded from the .env file in the same directory
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${PORT:-3014}
      - DATABASE_URL=${DATABASE_URL:-file:/app/prisma/data/database.db}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL}
      - TENANT_GITHUB_USERNAME=${TENANT_GITHUB_USERNAME}
      - FRONTEND_URL=${FRONTEND_URL}
      - WORKSPACE_CLEANUP_DAYS=${WORKSPACE_CLEANUP_DAYS:-30}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE}
      - LOG_MAX_FILES=${LOG_MAX_FILES}
      - LOG_COMPRESS=${LOG_COMPRESS}

    # Volumes remain the same to persist data
    volumes:
      - act_home:/home/claude
      - act_data:/app/prisma/data
      - act_workspaces:/app/workspaces
      - act_logs:/app/logs

    # Resource limits are crucial for production stability
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.25'

    # The healthcheck is defined in the image, but specifying it here is also fine.
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3014/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Define top-level volumes to be managed by Docker
volumes:
  act_home:
  act_data:
  act_workspaces:
  act_logs:
